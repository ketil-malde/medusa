
## Interfaces!

UPLOADER: Web form, upload files, text box entry
  JS: look up species names, persons, etc, and suggest automatic tagging

VALDIATOR: valdiate xml, check contents, look for possible mistakes

QUERY: accept text queries, suggest refinements based on available data
  (i.e. typing "salmon" suggest //species[@tsn:12345]) <- show num hits
  recognize persons, locations, etc.)

  Browse data set relationships.

RSS - provide feed with incoming data sets

## Contents

Unresolved issues:

- Citation and other related publications...
- People, institutes/affiliations, projects...
- Geographical regions, locations... (and how do we search them?)
- ...

## More notes:

# xmlstarlet can grep in xml documents, and produce fairly flexible output:

% xmlstarlet sel -t -m "//file" -o "Yo: " -v "@path" -n meta.xml 
Yo: test.fasta
Yo: test2.fna

xmlstarlet sel -t -m "//file[@path='test.fasta']" -o "Yo: " -v "@mimetype" -n meta.xml 
Yo: text/x-fasta-rna

# Regular expressions to specify element contents

zip = xsd:string { pattern='[0-9]{5}(-[0-9]{4})?' }

# Generate a list of files with md5sums
xmlstarlet sel -t -m "//file" -v "@path" -o "	" -v "@mimetype" -o "	" -v "@md5" ../*/meta.xml
# List all species
xmlstarlet sel -t -m "//species" -v "@sciname" -o "	" -v "@tsn" -o "	" -v "." ../*/meta.xml
