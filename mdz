#!/bin/bash
set -ef -o pipefail

# mdz is the front end, which in turns call other files

error(){
	echo Error: $*
	exit -1
}

read_config(){
  if [ -f "$MDZ_CONFIG" ]; then
	source "$MDZ_CONFIG"
  elif [ -f ~/.medusa.conf ]; then
	source ~/.medusa.conf
  elif [ -f /etc/medusa.conf ]; then
	source /etc/medusa.conf
  else
	error "no config file found - exit"
  fi
}

usage(){
  echo "Usage: mdz [cmd] [options]"
}

serve(){
    [ -x "$MDZ_DIR/services/$1" ] || error "No such service: $1"
    echo "services not implemented"
}

export MDZ_DIR MDZ_DATADIR MDZ_REPOSITORY MDZ_REPO_METHOD

read_config
CMD=$1
PARAMS="${@:2}"

case $CMD in
  check)
	$MDZ_DIR/xmlcheck.sh $PARAMS
  ;;
  checkall)
	$MDZ_DIR/checkall.sh $PARAMS
  ;;
  get)
	$MDZ_DIR/get.sh $PARAMS
  ;;
  put)
	$MDZ_DIR/put.sh $PARAMS
  ;;
  list)
	$MDZ_DIR/list.sh $PARAMS
  ;;
  genmeta)
	$MDZ_DIR/gen_meta.sh $PARAMS
  ;;
  service)
	serve $PARAMS
  ;;
  --help)
	usage
	cat <<EOF
Available commands:

  check    - check a dataset for correctness
  checkall - check all datasets
  get      - get a dataset from remote repository
  put      - put a dataset in remote repository
  list     - list contenst of remote repository
  genmeta  - generate metadata for a dataset

  service <serv> - service specific commmands

EOF
  echo "Available services: " $(ls $MDZ_DIR/services)
  ;;
  *)
 	usage
  ;;
esac

